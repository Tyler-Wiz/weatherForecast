{"ast":null,"code":"var _jsxFileName = \"/Users/tylerhome/Desktop/Dev/weatherapp/src/components/Weather.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Weather extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoaded: false,\n      data: [],\n      imgUrl: ''\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch('https://api.openweathermap.org/data/2.5/weather?q=Lagos&units=metric&appid=b6ea019473b1df46a1fa1dac301537dd');\n    const data = await res.json();\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        data: data,\n        imgUrl: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n      });\n    }, 2000);\n    console.log(data);\n  }\n\n  render() {\n    const {\n      isLoaded,\n      data,\n      imgUrl\n    } = this.state;\n    return !isLoaded ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"loading\",\n      src: \"./loading.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.main.temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"(\", data.weather[0].description, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/tylerhome/Desktop/Dev/weatherapp/src/components/Weather.jsx"],"names":["React","Component","Weather","constructor","state","isLoaded","data","imgUrl","componentDidMount","res","fetch","json","setTimeout","setState","weather","icon","console","log","render","main","temp","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC3BE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC,KADF;AAEPC,MAAAA,IAAI,EAAC,EAFE;AAGPC,MAAAA,MAAM,EAAC;AAHA,KAAX;AAKH;;AAEqB,QAAjBC,iBAAiB,GAAE;AACnB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6GAAD,CAAvB;AACA,UAAMJ,IAAI,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAAnB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACd,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAC,IADC;AAEVC,QAAAA,IAAI,EAACA,IAFK;AAGVC,QAAAA,MAAM,EAAE,oCAAmCD,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBC,IAAK;AAHtD,OAAd;AAKF,KANS,EAMP,IANO,CAAV;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEJ;;AAEAY,EAAAA,MAAM,GAAE;AACN,UAAM;AAACb,MAAAA,QAAD;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA;AAAjB,QAA2B,KAAKH,KAAtC;AACC,WACI,CAACC,QAAD,gBAAY;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAC,eAA7B;AAA6C,MAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAZ,gBACA;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEE,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKD,IAAI,CAACa,IAAL,CAAUC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,wBAAMd,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBO,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAQF;;AAnCyB;;AAsC/B,eAAenB,OAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Weather extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false,\n            data:[],\n            imgUrl:''\n        }\n    }\n\n   async componentDidMount(){\n         const res = await fetch('https://api.openweathermap.org/data/2.5/weather?q=Lagos&units=metric&appid=b6ea019473b1df46a1fa1dac301537dd')\n         const data = await res.json()\n\n         setTimeout(() => {\n            this.setState({\n                isLoaded:true,\n                data:data,\n                imgUrl:`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n            })\n         }, 2000);\n         console.log(data)\n         \n    }\n\n     render(){\n       const {isLoaded, data, imgUrl} = this.state\n        return(\n            !isLoaded ? <img className=\"loading\" src='./loading.png' alt=\"\"/> : \n            <div>\n                <img src={imgUrl} alt=\"\"/>\n                <h2>{data.main.temp}</h2>\n                <h3>({data.weather[0].description})</h3>\n            </div>\n        )\n     }\n}\n\nexport default Weather"]},"metadata":{},"sourceType":"module"}