{"ast":null,"code":"var _jsxFileName = \"/Users/tylerhome/Desktop/Dev/weatherForecast/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Forecast from './components/Forecast';\nimport FormComponent from './components/FormComponent';\nimport WeatherToday from './components/WeatherToday';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const apiKey = 'b6ea019473b1df46a1fa1dac301537dd';\n  const [query, setQuery] = useState('');\n  const [weathers, setWeather] = useState([]);\n  const [forecast, setForecast] = useState([]);\n\n  const displayWeather = async e => {\n    e.preventDefault();\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${apiKey}`;\n    const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast/daily?q=${query}&units=metric&appid=${apiKey}`;\n    const res = await fetch(url);\n    const data = await res.json();\n    setWeather(data);\n    const response = await fetch(forecastUrl);\n    const forecastData = await response.json();\n    const twoDays = forecastData.list.slice(1, 3);\n    setForecast(twoDays);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weathers.main != \"undefined\" ? weathers.main.temp > 16 ? 'hot' : 'container' : 'container',\n    children: [/*#__PURE__*/_jsxDEV(FormComponent, {\n      onsubmit: displayWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WeatherToday, {\n      weathers: weathers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: forecast.map(cast => /*#__PURE__*/_jsxDEV(Forecast, {\n        cast: cast\n      }, cast.deg, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"vL+WOBLGsHuyauAl+eTq9ssuigg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerhome/Desktop/Dev/weatherForecast/src/App.js"],"names":["React","useState","Forecast","FormComponent","WeatherToday","App","apiKey","query","setQuery","weathers","setWeather","forecast","setForecast","displayWeather","e","preventDefault","url","forecastUrl","res","fetch","data","json","response","forecastData","twoDays","list","slice","main","temp","map","cast","deg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAMC,MAAM,GAAG,kCAAf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACU,QAAD,EAAYC,WAAZ,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;;AAEE,QAAMY,cAAc,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACC,UAAMC,GAAG,GAAI,qDAAoDT,KAAM,uBAAsBD,MAAO,EAApG;AACA,UAAMW,WAAW,GAAI,4DAA2DV,KAAM,uBAAsBD,MAAO,EAAnH;AACA,UAAMY,GAAG,GAAI,MAAMC,KAAK,CAACH,GAAD,CAAxB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAX,IAAAA,UAAU,CAACU,IAAD,CAAV;AAEA,UAAME,QAAQ,GAAG,MAAMH,KAAK,CAACF,WAAD,CAA5B;AACA,UAAMM,YAAY,GAAG,MAAMD,QAAQ,CAACD,IAAT,EAA3B;AACA,UAAMG,OAAO,GAAGD,YAAY,CAACE,IAAb,CAAkBC,KAAlB,CAAwB,CAAxB,EAA0B,CAA1B,CAAhB;AACAd,IAAAA,WAAW,CAACY,OAAD,CAAX;AAEJ,GAbD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAOf,QAAQ,CAACkB,IAAhB,IAAwB,WAAzB,GAA0ClB,QAAQ,CAACkB,IAAT,CAAcC,IAAd,GAAqB,EAAtB,GAA4B,KAA5B,GAAoC,WAA7E,GAA4F,WAA5G;AAAA,4BAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEf;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEJ;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGE,QAAQ,CAACkB,GAAT,CAAaC,IAAI,iBAChB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACC,GAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeH;;GAtCQ1B,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css'\n\nimport Forecast from './components/Forecast';\nimport FormComponent from './components/FormComponent';\nimport WeatherToday from './components/WeatherToday';\n\nfunction App(){\n  const apiKey = 'b6ea019473b1df46a1fa1dac301537dd'\n  const [query, setQuery] = useState('')\n  const [weathers, setWeather] = useState([])\n  const [forecast , setForecast] = useState([])\n     \n    const displayWeather = async (e) => {\n        e.preventDefault()\n         const url = `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${apiKey}`\n         const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast/daily?q=${query}&units=metric&appid=${apiKey}`\n         const res =  await fetch(url)\n         const data = await res.json()\n         setWeather(data)\n         \n         const response = await fetch(forecastUrl)\n         const forecastData = await response.json()\n         const twoDays = forecastData.list.slice(1,3)\n         setForecast(twoDays)  \n\n    }\n\n    \n   \n    return(\n      <div className={(typeof weathers.main != \"undefined\") ? ((weathers.main.temp > 16) ? 'hot' : 'container') : 'container'}>\n          \n        <FormComponent onsubmit={displayWeather}/>\n        <WeatherToday weathers={weathers}/>\n\n        <div className='forecast'>\n          {forecast.map(cast => (\n            <Forecast cast={cast} key={cast.deg}/>\n          ))}\n        </div>\n       </div>\n\n      \n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}